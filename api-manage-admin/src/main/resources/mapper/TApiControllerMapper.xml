<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.guonl.dao.TApiControllerMapper">
  <resultMap id="BaseResultMap" type="com.guonl.entity.TApiController">
    <id column="controller_id" jdbcType="INTEGER" property="controllerId" />
    <result column="project_id" jdbcType="INTEGER" property="projectId" />
    <result column="controller_name" jdbcType="VARCHAR" property="controllerName" />
    <result column="controller_short_name" jdbcType="VARCHAR" property="controllerShortName" />
    <result column="controller_desc" jdbcType="VARCHAR" property="controllerDesc" />
    <result column="controller_status" jdbcType="INTEGER" property="controllerStatus" />
    <result column="create_time" jdbcType="TIMESTAMP" property="createTime" />
    <result column="update_time" jdbcType="TIMESTAMP" property="updateTime" />
    <result column="del_flag" jdbcType="BIT" property="delFlag" />
  </resultMap>
  <sql id="Example_Where_Clause">
    <where>
      <foreach collection="oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Update_By_Example_Where_Clause">
    <where>
      <foreach collection="example.oredCriteria" item="criteria" separator="or">
        <if test="criteria.valid">
          <trim prefix="(" prefixOverrides="and" suffix=")">
            <foreach collection="criteria.criteria" item="criterion">
              <choose>
                <when test="criterion.noValue">
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue">
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue">
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue">
                  and ${criterion.condition}
                  <foreach close=")" collection="criterion.value" item="listItem" open="(" separator=",">
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List">
    controller_id, project_id, controller_name, controller_short_name, controller_desc, 
    controller_status, create_time, update_time, del_flag
  </sql>
  <select id="selectByExample" parameterType="com.guonl.entity.TApiControllerExample" resultMap="BaseResultMap">
    select
    <if test="distinct">
      distinct
    </if>
    <include refid="Base_Column_List" />
    from api_controller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
  </select>
  <select id="selectByPrimaryKey" parameterType="java.lang.Integer" resultMap="BaseResultMap">
    select 
    <include refid="Base_Column_List" />
    from api_controller
    where controller_id = #{controllerId,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer">
    delete from api_controller
    where controller_id = #{controllerId,jdbcType=INTEGER}
  </delete>
  <delete id="deleteByExample" parameterType="com.guonl.entity.TApiControllerExample">
    delete from api_controller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </delete>
  <insert id="insert" parameterType="com.guonl.entity.TApiController">
    insert into api_controller (controller_id, project_id, controller_name, 
      controller_short_name, controller_desc, controller_status, 
      create_time, update_time, del_flag
      )
    values (#{controllerId,jdbcType=INTEGER}, #{projectId,jdbcType=INTEGER}, #{controllerName,jdbcType=VARCHAR}, 
      #{controllerShortName,jdbcType=VARCHAR}, #{controllerDesc,jdbcType=VARCHAR}, #{controllerStatus,jdbcType=INTEGER}, 
      #{createTime,jdbcType=TIMESTAMP}, #{updateTime,jdbcType=TIMESTAMP}, #{delFlag,jdbcType=BIT}
      )
  </insert>
  <insert id="insertSelective" parameterType="map">
    insert into api_controller
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          ${column.escapedColumnName}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.controllerId != null">
            controller_id,
          </if>
          <if test="record.projectId != null">
            project_id,
          </if>
          <if test="record.controllerName != null">
            controller_name,
          </if>
          <if test="record.controllerShortName != null">
            controller_short_name,
          </if>
          <if test="record.controllerDesc != null">
            controller_desc,
          </if>
          <if test="record.controllerStatus != null">
            controller_status,
          </if>
          <if test="record.createTime != null">
            create_time,
          </if>
          <if test="record.updateTime != null">
            update_time,
          </if>
          <if test="record.delFlag != null">
            del_flag,
          </if>
        </trim>
        <trim prefix="(" suffix=")" suffixOverrides="," />
      </otherwise>
    </choose>
    values
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach close=")" collection="selective" item="column" open="(" separator=",">
          #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim prefix="(" suffix=")" suffixOverrides=",">
          <if test="record.controllerId != null">
            #{record.controllerId,jdbcType=INTEGER},
          </if>
          <if test="record.projectId != null">
            #{record.projectId,jdbcType=INTEGER},
          </if>
          <if test="record.controllerName != null">
            #{record.controllerName,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerShortName != null">
            #{record.controllerShortName,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerDesc != null">
            #{record.controllerDesc,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerStatus != null">
            #{record.controllerStatus,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.delFlag != null">
            #{record.delFlag,jdbcType=BIT},
          </if>
        </trim>
      </otherwise>
    </choose>
  </insert>
  <select id="countByExample" parameterType="com.guonl.entity.TApiControllerExample" resultType="java.lang.Long">
    select count(*) from api_controller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByExampleSelective" parameterType="map">
    update api_controller
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.controllerId != null">
            controller_id = #{record.controllerId,jdbcType=INTEGER},
          </if>
          <if test="record.projectId != null">
            project_id = #{record.projectId,jdbcType=INTEGER},
          </if>
          <if test="record.controllerName != null">
            controller_name = #{record.controllerName,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerShortName != null">
            controller_short_name = #{record.controllerShortName,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerDesc != null">
            controller_desc = #{record.controllerDesc,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerStatus != null">
            controller_status = #{record.controllerStatus,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=BIT},
          </if>
        </trim>
      </otherwise>
    </choose>
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByExample" parameterType="map">
    update api_controller
    set controller_id = #{record.controllerId,jdbcType=INTEGER},
      project_id = #{record.projectId,jdbcType=INTEGER},
      controller_name = #{record.controllerName,jdbcType=VARCHAR},
      controller_short_name = #{record.controllerShortName,jdbcType=VARCHAR},
      controller_desc = #{record.controllerDesc,jdbcType=VARCHAR},
      controller_status = #{record.controllerStatus,jdbcType=INTEGER},
      create_time = #{record.createTime,jdbcType=TIMESTAMP},
      update_time = #{record.updateTime,jdbcType=TIMESTAMP},
      del_flag = #{record.delFlag,jdbcType=BIT}
    <if test="_parameter != null">
      <include refid="Update_By_Example_Where_Clause" />
    </if>
  </update>
  <update id="updateByPrimaryKeySelective" parameterType="map">
    update api_controller
    SET
    <choose>
      <when test="selective != null and selective.length > 0">
        <foreach collection="selective" item="column" separator=",">
          ${column.escapedColumnName} = #{record.${column.javaProperty},jdbcType=${column.jdbcType}}
        </foreach>
      </when>
      <otherwise>
        <trim suffixOverrides=",">
          <if test="record.projectId != null">
            project_id = #{record.projectId,jdbcType=INTEGER},
          </if>
          <if test="record.controllerName != null">
            controller_name = #{record.controllerName,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerShortName != null">
            controller_short_name = #{record.controllerShortName,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerDesc != null">
            controller_desc = #{record.controllerDesc,jdbcType=VARCHAR},
          </if>
          <if test="record.controllerStatus != null">
            controller_status = #{record.controllerStatus,jdbcType=INTEGER},
          </if>
          <if test="record.createTime != null">
            create_time = #{record.createTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.updateTime != null">
            update_time = #{record.updateTime,jdbcType=TIMESTAMP},
          </if>
          <if test="record.delFlag != null">
            del_flag = #{record.delFlag,jdbcType=BIT},
          </if>
        </trim>
      </otherwise>
    </choose>
    where controller_id = #{record.controllerId,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.guonl.entity.TApiController">
    update api_controller
    set project_id = #{projectId,jdbcType=INTEGER},
      controller_name = #{controllerName,jdbcType=VARCHAR},
      controller_short_name = #{controllerShortName,jdbcType=VARCHAR},
      controller_desc = #{controllerDesc,jdbcType=VARCHAR},
      controller_status = #{controllerStatus,jdbcType=INTEGER},
      create_time = #{createTime,jdbcType=TIMESTAMP},
      update_time = #{updateTime,jdbcType=TIMESTAMP},
      del_flag = #{delFlag,jdbcType=BIT}
    where controller_id = #{controllerId,jdbcType=INTEGER}
  </update>
  <select id="selectOneByExample" parameterType="com.guonl.entity.TApiControllerExample" resultMap="BaseResultMap">
    select
    <include refid="Base_Column_List" />
    from api_controller
    <if test="_parameter != null">
      <include refid="Example_Where_Clause" />
    </if>
    <if test="orderByClause != null">
      order by ${orderByClause}
    </if>
    limit 1
  </select>
  <insert id="batchInsert" parameterType="map">
    insert into api_controller
    (controller_id, project_id, controller_name, controller_short_name, controller_desc, 
      controller_status, create_time, update_time, del_flag)
    values
    <foreach collection="list" item="item" separator=",">
      (#{item.controllerId,jdbcType=INTEGER}, #{item.projectId,jdbcType=INTEGER}, #{item.controllerName,jdbcType=VARCHAR}, 
        #{item.controllerShortName,jdbcType=VARCHAR}, #{item.controllerDesc,jdbcType=VARCHAR}, 
        #{item.controllerStatus,jdbcType=INTEGER}, #{item.createTime,jdbcType=TIMESTAMP}, 
        #{item.updateTime,jdbcType=TIMESTAMP}, #{item.delFlag,jdbcType=BIT})
    </foreach>
  </insert>
  <insert id="batchInsertSelective" parameterType="map">
    insert into api_controller (
    <foreach collection="selective" item="column" separator=",">
      ${column.escapedColumnName}
    </foreach>
    )
    values
    <foreach collection="list" item="item" separator=",">
      (
      <foreach collection="selective" item="column" separator=",">
        <if test="'controller_id'.toString() == column.value">
          #{item.controllerId,jdbcType=INTEGER}
        </if>
        <if test="'project_id'.toString() == column.value">
          #{item.projectId,jdbcType=INTEGER}
        </if>
        <if test="'controller_name'.toString() == column.value">
          #{item.controllerName,jdbcType=VARCHAR}
        </if>
        <if test="'controller_short_name'.toString() == column.value">
          #{item.controllerShortName,jdbcType=VARCHAR}
        </if>
        <if test="'controller_desc'.toString() == column.value">
          #{item.controllerDesc,jdbcType=VARCHAR}
        </if>
        <if test="'controller_status'.toString() == column.value">
          #{item.controllerStatus,jdbcType=INTEGER}
        </if>
        <if test="'create_time'.toString() == column.value">
          #{item.createTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'update_time'.toString() == column.value">
          #{item.updateTime,jdbcType=TIMESTAMP}
        </if>
        <if test="'del_flag'.toString() == column.value">
          #{item.delFlag,jdbcType=BIT}
        </if>
      </foreach>
      )
    </foreach>
  </insert>
</mapper>